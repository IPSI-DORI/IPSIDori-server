name: Build and Test with Coverage

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CONFIG_SUBMODULE_TOKEN }}
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and Test
        run: ./gradlew clean build test jacocoTestReport -Dspring.profiles.active=test

      - name: Comment if Test Fails
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Coverage Report
        id: check_coverage
        run: |
          FILE_PATH="${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml"
          if [ -s "$FILE_PATH" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload Coverage to PR
        if: steps.check_coverage.outputs.exists == 'true'
        uses: madrapps/jacoco-report@v1.2
        with:
          title: "[ 테스트 커버리지 리포트 ]"
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
